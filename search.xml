<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mysql 优化 (二)</title>
      <link href="/2019/04/22/2019-04-22-Mysql%20%E4%BC%98%E5%8C%96%20(%E4%BA%8C)/"/>
      <url>/2019/04/22/2019-04-22-Mysql%20%E4%BC%98%E5%8C%96%20(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<p>优化的方面</p><ul><li>索引相关</li><li>分表设计</li><li>架构设计</li><li>慢查询日志收集</li><li>其他优化</li></ul><a id="more"></a><h3 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h3><ul><li>它是物理存在的</li><li></li></ul><h4 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h4><blockquote><p>字段独立原则</p><blockquote><blockquote><p>name     (对)<br>name + 2 (错)<br>左原则<br>like ‘bill%’ (对)<br>like ‘%bill’ (错)<br>复合索引<br>不能直接使用第2个字段<br>or 原则<br>左右都有索引，会合并索引一起使用<br>一边有索引、一边没有索引，导致整体都没得索引使用</p></blockquote></blockquote></blockquote><h4 id="设计依据"><a href="#设计依据" class="headerlink" title="设计依据"></a>设计依据</h4><blockquote><p>被<strong>频繁</strong>使用的字段设置索引</p><pre><code>* 字段被频繁用在where和order等条件里边。* 数据表创建完毕，要预估那些字段被经常使用，就给其创建索引</code></pre><p>执行<strong><em>时间长</em></strong>的sql语句考虑设计索引</p><pre><code>* 可以利用”慢查询日志”收集这样的sql语句并优化设计索引</code></pre><p>逻辑非常<strong>重要的sql</strong>语句考虑设计索引</p><pre><code>* 例如商城系统里边，会员给自己账户充值就比较重要 * 还有会员下订单购物，进行付款的时候也比较重要。</code></pre><p>字段内容足够<strong>花样化</strong>，适合创建索引</p><pre><code>* 反面教材，性别不能设计索引(内容的取值非常少)</code></pre></blockquote><h3 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h3><blockquote><p>什么是前缀索引：</p><p>如果一个字段内容的前边的n位信息已经足够标识当前的字段内容，就可以把字段的前n位获得出来并创建索引，通过字段内容前n位创建的索引就称为“前缀索引”。</p><p>语法：alter table 表名 add key (字段(前n 位 位数));</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">测试，取前几位，可以获取索引</span><br><span class="line">select count(distinct(substring())) from emp;</span><br><span class="line">alter table emp add key(password(3));</span><br></pre></td></tr></table></figure><ul><li>substring(字段,开始位置,长度n) 截取字段内容，字段下标从1开始</li></ul><h3 id="全文索引"><a href="#全文索引" class="headerlink" title="全文索引"></a>全文索引</h3><blockquote><p>把字段中的一些关键字单词出来制作索引</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE articles (</span><br><span class="line">       id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,</span><br><span class="line">       title VARCHAR(200),</span><br><span class="line">       body TEXT</span><br><span class="line">)engine=myisam charset utf8;</span><br><span class="line"></span><br><span class="line">INSERT INTO articles (title,body) VALUES</span><br><span class="line">     (&apos;MySQL Tutorial&apos;,&apos;DBMS stands for DataBase ...&apos;),</span><br><span class="line">     (&apos;How To Use MySQL Well&apos;,&apos;After you went through a ...&apos;),</span><br><span class="line">     (&apos;Optimizing MySQL&apos;,&apos;In this tutorial we will show ...&apos;),</span><br><span class="line">     (&apos;1001 MySQL Tricks&apos;,&apos;1. Never run mysqld as root. 2. ...&apos;),</span><br><span class="line">     (&apos;MySQL vs. YourSQL&apos;,&apos;In the following database comparison ...&apos;),</span><br><span class="line">     (&apos;MySQL Security&apos;,&apos;When configured properly, MySQL ...&apos;);</span><br><span class="line"></span><br><span class="line">alter table articles add fulltext key (body);</span><br></pre></td></tr></table></figure><ul><li>全文索引会解决like模糊查找不用索引的问题：</li><li>select * from 表名  like  ‘%内容%’;   //不会使用索引</li><li><p>以上模糊查找如果必须使用索引，就可以使用全文索引</p></li><li><p>select * from 表名  where  字段  like  ‘%内容%’; //不会用到全文索引</p></li><li>select * from 表名  where  match(字段) against(内容) //会用到全文索引</li></ul><h4 id="全文索引注意"><a href="#全文索引注意" class="headerlink" title="全文索引注意"></a>全文索引注意</h4><ul><li>字段类型必须为varchar/char/text类型</li><li>mysql 5.6.4之前只有Myisam支持，5.6.4之后则Myisam和innodb都支持。</li><li>mysql中的全文索引目前只支持英文(不支持中文)，如果需要支持中文可以使用sphinx</li><li>生产活动中mysql的全文索引不常使用，sphinx常使用</li><li>mysql全文索引会自作聪明，对关键字的收录有自己的考虑(不是全部关键字都给收录)。<br> 例如生活常用单词、频繁使用单词都不给创建索引(比如 for  when  where  run you等等)</li></ul><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><blockquote><p>索引就是数据结构， 数据以一定的结构组织起来，内部嵌入算法，算法可以保证数据被快速获取。</p><p>数据结构：数据以一种规律的、规则的方式组织在一起。(例如0-9顺序排列数字、a-z顺序排列字母等)</p><p>主要讨论两种：Myisam 和 Innodb..<br>Mysql的索引数据结构都是B+tree结构(除此还有B-tree、二叉树等结构)</p></blockquote><h3 id="分表设计"><a href="#分表设计" class="headerlink" title="分表设计"></a>分表设计</h3><blockquote><p>一个数据表里边存储的记录信息太多了，例如记录的条数达到1-2亿条信息，<br>该数据表的活性就大大降低，运行速度、效率大打折扣，影响mysql数据库的整体性能，<br>因此要给数据表进行分表设计，使得每个表存储少量的数据。</p></blockquote><h3 id="逻辑分表"><a href="#逻辑分表" class="headerlink" title="逻辑分表"></a>逻辑分表</h3><blockquote><p>注意：分表字段必须是主键 或 主键的一部分(复合主键索引的第二个字段也可以)</p></blockquote><h4 id="range-分表-范围方式"><a href="#range-分表-范围方式" class="headerlink" title="range 分表 [范围方式]"></a>range 分表 [范围方式]</h4><blockquote><p>语法：partition by range(表达式 | 字段)(<br>    partition 名称1 values less than (常量整数值),<br>    partition 名称2 values less than (常量整数值),<br>    … …<br>)</p></blockquote><h4 id="range-添加分表"><a href="#range-添加分表" class="headerlink" title="range 添加分表"></a>range 添加分表</h4><blockquote><p>语法：alter table 表名 add partition(<br>    partition 名称1 values less than (常量整数值),<br>    … …<br>)</p></blockquote><h4 id="list-分表-范围方式"><a href="#list-分表-范围方式" class="headerlink" title="list 分表 [范围方式]"></a>list 分表 [范围方式]</h4><blockquote><p>语法：partition by list(month(pubdate))(<br>    partition 名称 values in (列表范围),<br>    … …<br>)</p></blockquote><h4 id="list-添加分表"><a href="#list-添加分表" class="headerlink" title="list 添加分表"></a>list 添加分表</h4><blockquote><p>语法：alter table 表名 add partition(<br>    partition 名称 values in (列表范围),<br>    … …<br>)</p></blockquote><h4 id="range-list-删除分表"><a href="#range-list-删除分表" class="headerlink" title="range, list 删除分表"></a>range, list 删除分表</h4><blockquote><p>语法：alter table 表名 drop partition 分区名称</p></blockquote><h4 id="key-分表-求余方式"><a href="#key-分表-求余方式" class="headerlink" title="key 分表 [求余方式]"></a>key 分表 [求余方式]</h4><blockquote><p>语法：partition by key(条件字段) partitions 数量;</p></blockquote><h4 id="hash-分表-求余方式"><a href="#hash-分表-求余方式" class="headerlink" title="hash 分表 [求余方式]"></a>hash 分表 [求余方式]</h4><blockquote><p>partition by hash (表达式|字段) partitions 数量</p></blockquote><h4 id="key-hash-添加分表"><a href="#key-hash-添加分表" class="headerlink" title="key, hash 添加分表"></a>key, hash 添加分表</h4><blockquote><p>alter table 表名 add partition partitions 数量;</p></blockquote><h4 id="key-hash-删除分表"><a href="#key-hash-删除分表" class="headerlink" title="key, hash 删除分表"></a>key, hash 删除分表</h4><blockquote><p>alter table 表名 coalesce partition 数量</p></blockquote><h3 id="物理分表"><a href="#物理分表" class="headerlink" title="物理分表"></a>物理分表</h3><h3 id="垂直分表"><a href="#垂直分表" class="headerlink" title="垂直分表"></a>垂直分表</h3>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 优化 (一)</title>
      <link href="/2019/04/22/2019-04-22-Mysql%20%E4%BC%98%E5%8C%96%20(%E4%B8%80)/"/>
      <url>/2019/04/22/2019-04-22-Mysql%20%E4%BC%98%E5%8C%96%20(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<p>优化的方面</p><ul><li>存储层：数据表”存储引擎”选取、字段类型选取、逆范式(3范式)</li><li>设计层：索引、分区/分表</li><li>架构层：分布式部署(集群)</li><li>sql语句层：结果一样的情况下，要选择效率高、速度快、节省资源的sql语句执行</li></ul><a id="more"></a><h3 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h3><blockquote><p>查看引擎：show engines;</p></blockquote><h4 id="MYISAM"><a href="#MYISAM" class="headerlink" title="MYISAM"></a>MYISAM</h4><ul><li>.frm : 表结构文件</li><li>.MYD : 数据文件(mysql data)</li><li>.MYI : 索引文件(mysql index)</li></ul><p>(支持物理复制、粘贴以实现数据的备份、还原操作)</p><h4 id="数据写入顺序"><a href="#数据写入顺序" class="headerlink" title="数据写入顺序"></a>数据写入顺序</h4><blockquote><p>数据写入时候，不会按照主键id值给予排序存储，该特点导致数据写入的速度非常快。<br>写没有固定顺序，存也按照写的顺序存，不给考虑先后顺序。</p></blockquote><h4 id="并发性"><a href="#并发性" class="headerlink" title="并发性"></a>并发性</h4><blockquote><p>mysiam的并发性(同时处理工作的能力)较比innodb要稍逊色<br>因为数据表是“表锁”(innodb行锁)</p></blockquote><h4 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h4><blockquote><p>如果一个myisam数据表存储的数据非常多，就会占据很大的硬盘空间，硬盘空间我们不在乎，在乎的是mysql数据库系统为了处理该数据表就需要分配更多的资源，为了节省资源，可以把这个myisam数据表给进行压缩处理。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] pwd</span><br><span class="line">/usr/bin/myisampack</span><br><span class="line">压缩语法：myisampack 表名(绝对路径定义)</span><br></pre></td></tr></table></figure><blockquote><p>压缩后的数据表仍然可以支持查询操作,压缩后的数据表需要根据最新的数据位置把索引重新建立一次。<br>根据压缩后的据把索引重建建立起来。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] find / -name myisamchk</span><br><span class="line">/usr/bin/myisamchk</span><br><span class="line">重建索引语法：myisamchk  -rq  表名(绝对路径定义)</span><br></pre></td></tr></table></figure><blockquote><p>压缩的数据表不能再写入数据了(尝试写入会造成数据表崩溃)，必须解压后才可以。<br>(解压缩的同时，索引会自动重建)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解压语法：myisamchk  --unpack  表名(绝对路径定义)</span><br></pre></td></tr></table></figure><h3 id="innodb"><a href="#innodb" class="headerlink" title="innodb"></a>innodb</h3><ul><li>.frm : 结构文件</li><li>.ibd : 数据/索引文件</li></ul><blockquote><p>innodb数据表不能直接的复制/粘贴文件，以便做进行备份还原，可以通过如下指令完成数据的备份和还原：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p密码  数据库名字 &gt; /home/xiaogang/xxx.sql  [备份]</span><br><span class="line">mysql -uroot -p密码 数据库名字   &lt;  /home/xiaogang/xxx.sql  [还原]</span><br></pre></td></tr></table></figure><h4 id="数据写入顺序-1"><a href="#数据写入顺序-1" class="headerlink" title="数据写入顺序"></a>数据写入顺序</h4><blockquote><p>该innodb数据表，数据的写入顺序 与 存储的顺序不一致，需要按照主键的顺序把记录摆放到对应的位置上去，速度比Myisam的要稍慢。</p></blockquote><h4 id="并发性-1"><a href="#并发性-1" class="headerlink" title="并发性"></a>并发性</h4><blockquote><p>并发性高，多人同时请求，速度快、效率高。<br>innodb锁机制：行锁，每次只锁住一条记录信息。</p></blockquote><h3 id="myisam-innodb-的取舍"><a href="#myisam-innodb-的取舍" class="headerlink" title="myisam , innodb 的取舍"></a>myisam , innodb 的取舍</h3><ul><li>myisam： 写入数据非常快，适合使用场合dedecms/phpcms/discuz/微博系统等写入、读取操作多的系统。</li><li>innodb: 适合业务逻辑比较强的系统，修改 操作较多的，例如ecshop、crm、办公系统、商城系统</li></ul><h3 id="memory"><a href="#memory" class="headerlink" title="memory"></a>memory</h3><p>内存存储引擎，    </p><ul><li>特点：内部数据都运行在内存中，数据存储也在内存中，速度非常快，临时存储一些信息</li><li>缺点：服务器如果断电，就会清空该存储引擎的全部数据</li></ul><h3 id="设置索引"><a href="#设置索引" class="headerlink" title="设置索引"></a>设置索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table student5 add primary key (id);</span><br><span class="line">alter table student5 add unique  key  (name);</span><br><span class="line">alter table student5 add         key (height);</span><br><span class="line">alter table student5 add fulltext key (introduce);</span><br></pre></td></tr></table></figure><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><blockquote><p>语法：<br>alter table  表名  drop  key  索引名称;  //[非主键]索引删除(唯一/普通/全文/复合)<br>alter table  表名  drop  primary key;  //[主键]索引删除</p></blockquote><blockquote><p>注意：删除主键索引，必须先去除auto_increment属性</p></blockquote><hr><blockquote><p>可以修改配置，改变innodb数据表的数据、索引文件的存储方式：</p><pre><code>* set global innodb_file_per_table=1/0;</code></pre></blockquote><blockquote><p>InnodB数据表数据、索引合并文件分为两种情况：</p><pre><code>* 每个数据表都有自己的数据、索引合并文件* 数据库中全部的数据表共享一个数据、索引合并文件</code></pre></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉查找树</title>
      <link href="/2019/03/23/2019-03-23-%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91/"/>
      <url>/2019/03/23/2019-03-23-%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>Go 语言实现 二叉查找树。 日常笔记。<a href="https://www.cnblogs.com/yangecnu/p/Introduce-Binary-Search-Tree.html" target="_blank" rel="noopener">原文</a></p><a id="more"></a><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>二叉查找树（Binary Search Tree），也称有序二叉树（ordered binary tree）,排序二叉树（sorted binary tree），是指一棵空树或者具有下列性质的二叉树：</p><blockquote><p>若任意节点的左子树不空，则左子树上所有结点的值均小于它的根结点的值；<br>若任意节点的右子树不空，则右子树上所有结点的值均大于它的根结点的值；<br>任意节点的左、右子树也分别为二叉查找树。<br>没有键值相等的节点（no duplicate nodes）。</p></blockquote><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 二叉查找树</span><br><span class="line">type Tree struct &#123;</span><br><span class="line">Root *Node</span><br><span class="line">&#125;</span><br><span class="line">// 结点</span><br><span class="line">type Node struct &#123;</span><br><span class="line">Value int</span><br><span class="line">Left *Node</span><br><span class="line">Right *Node</span><br><span class="line">Parent *Node</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加一个结点"><a href="#添加一个结点" class="headerlink" title="添加一个结点"></a>添加一个结点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">func (this *Tree) Insert(v int) &#123;</span><br><span class="line">n := new(Node)</span><br><span class="line">n.Value = v</span><br><span class="line">if this.Root == nil &#123;</span><br><span class="line">this.Root = n</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">cur := this.Root</span><br><span class="line">for &#123;</span><br><span class="line">n.Parent = cur</span><br><span class="line">if v &lt; cur.Value &#123;</span><br><span class="line">if cur.Left == nil &#123;</span><br><span class="line">cur.Left = n</span><br><span class="line">break</span><br><span class="line">&#125; else &#123;</span><br><span class="line">cur = cur.Left</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if cur.Right == nil &#123;</span><br><span class="line">cur.Right = n</span><br><span class="line">break</span><br><span class="line">&#125; else &#123;</span><br><span class="line">cur = cur.Right</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="遍历树"><a href="#遍历树" class="headerlink" title="遍历树"></a>遍历树</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">func (this *Tree) Select() &#123;</span><br><span class="line">var mapSearch func(n *Node)</span><br><span class="line">mapSearch = func(n *Node)&#123;</span><br><span class="line">if n != nil &#123;</span><br><span class="line">mapSearch(n.Left)</span><br><span class="line">fmt.Println(n.Value)</span><br><span class="line">mapSearch(n.Right)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mapSearch(this.Root)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查找一个结点"><a href="#查找一个结点" class="headerlink" title="查找一个结点"></a>查找一个结点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">func (this *Tree) Search(v int) *Node&#123;</span><br><span class="line">cur := this.Root</span><br><span class="line">for &#123;</span><br><span class="line">if v &lt; cur.Value &#123;</span><br><span class="line">cur = cur.Left</span><br><span class="line">if cur == nil &#123;</span><br><span class="line">return nil</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if v &gt; cur.Value &#123;</span><br><span class="line">cur = cur.Right</span><br><span class="line">if cur == nil &#123;</span><br><span class="line">return nil</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return cur</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最小结点"><a href="#最小结点" class="headerlink" title="最小结点"></a>最小结点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">func (this *Tree) Min() *Node&#123;</span><br><span class="line">cur := this.Root</span><br><span class="line">for &#123;</span><br><span class="line">if cur.Left != nil &#123;</span><br><span class="line">cur = cur.Left</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return cur</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最大结点"><a href="#最大结点" class="headerlink" title="最大结点"></a>最大结点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">func (this *Tree) Max() *Node&#123;</span><br><span class="line">cur := this.Root</span><br><span class="line">for &#123;</span><br><span class="line">if cur.Right != nil &#123;</span><br><span class="line">cur = cur.Right</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return cur</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除一个结点"><a href="#删除一个结点" class="headerlink" title="删除一个结点"></a>删除一个结点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">func (this *Tree) Delete(v int) &#123;</span><br><span class="line">fmt.Printf(&quot;del: %d\n&quot;,v)</span><br><span class="line">var (</span><br><span class="line">mapDel func (n *Node)</span><br><span class="line">cur = this.Search(v)</span><br><span class="line">)</span><br><span class="line">mapDel = func (cur *Node) &#123;</span><br><span class="line">if cur == nil &#123;</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">if cur.Left == nil &amp;&amp; cur.Right == nil &#123;</span><br><span class="line">if cur.Parent.Left == cur &#123;</span><br><span class="line">cur.Parent.Left = nil</span><br><span class="line">&#125; else &#123;</span><br><span class="line">cur.Parent.Right = nil</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if cur.Left == nil &amp;&amp; cur.Right != nil &#123;</span><br><span class="line">cur.Right.Parent = cur.Parent</span><br><span class="line">if cur.Parent.Left == cur &#123;</span><br><span class="line">cur.Parent.Left = cur.Right</span><br><span class="line">&#125; else &#123;</span><br><span class="line">cur.Parent.Right = cur.Right</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if cur.Left != nil &amp;&amp; cur.Right == nil &#123;</span><br><span class="line">cur.Left.Parent = cur.Parent</span><br><span class="line">if cur.Parent.Left == cur &#123;</span><br><span class="line">cur.Parent.Left = cur.Left</span><br><span class="line">&#125; else &#123;</span><br><span class="line">cur.Parent.Right = cur.Left</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">fmt.Println(&quot;both&quot;)</span><br><span class="line">curs := cur.Right</span><br><span class="line">for &#123;</span><br><span class="line">if curs.Left != nil &#123;</span><br><span class="line">curs = curs.Left</span><br><span class="line">&#125; else &#123;</span><br><span class="line">break</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cur.Value = curs.Value</span><br><span class="line">mapDel(curs)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mapDel(cur)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">func main() &#123;</span><br><span class="line">var t Tree</span><br><span class="line">t.Insert(100)</span><br><span class="line">t.Insert(120)</span><br><span class="line">t.Insert(80)</span><br><span class="line">t.Insert(70)</span><br><span class="line">t.Insert(90)</span><br><span class="line">t.Insert(85)</span><br><span class="line">t.Insert(95)</span><br><span class="line">t.Insert(110)</span><br><span class="line">t.Select()</span><br><span class="line">t.Delete(80)</span><br><span class="line">t.Select()</span><br><span class="line">fmt.Println(&quot;---------------&quot;)</span><br><span class="line">val := t.Search(110)</span><br><span class="line">fmt.Println(val)</span><br><span class="line">fmt.Println(t.Min())</span><br><span class="line">fmt.Println(t.Root.Value)</span><br><span class="line">fmt.Println(t.Root.Left.Value)</span><br><span class="line">fmt.Println(t.Root.Right.Value)</span><br><span class="line">t.Edit(80,125)</span><br><span class="line">t.Select()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> struct </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用正则表达式</title>
      <link href="/2019/03/18/2019-03-18-%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2019/03/18/2019-03-18-%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>常用正则汇总。</p><a id="more"></a><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><blockquote><p><a href="http://php.net/manual/zh/function.preg-match.php" target="_blank" rel="noopener">preg_match ( string $pattern , string $subject ) : int </a>搜索subject与pattern给定的正则表达式的一个匹配.</p></blockquote><h4 id="密码规范"><a href="#密码规范" class="headerlink" title="密码规范"></a>密码规范</h4><p>包括8 - 16 大小写，符号数字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9!@#$%*()_+^&amp;]&#123;8,16&#125;$/</span><br></pre></td></tr></table></figure></p><h4 id="手机号"><a href="#手机号" class="headerlink" title="手机号"></a>手机号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^1[3|4|5|7|8][0-9]\d&#123;4,8&#125;$/</span><br></pre></td></tr></table></figure><h4 id="与-pathinfo-功能类似"><a href="#与-pathinfo-功能类似" class="headerlink" title="与 pathinfo 功能类似"></a>与 pathinfo 功能类似</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%^(.*?)[\\\\/]*(([^/\\\\]*?)(\.([^\.\\\\/]+?)|))[\\\\/\.]*$%im</span><br></pre></td></tr></table></figure><h4 id="与-parse-url-功能类似"><a href="#与-parse-url-功能类似" class="headerlink" title="与 parse_url 功能类似"></a>与 parse_url 功能类似</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var reg = /.../</span><br><span class="line"></span><br><span class="line">reg.test(&apos;18332566840&apos;) //返回 true false</span><br><span class="line"></span><br><span class="line">str.match(reg)//返回 null</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> regex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> javaScript </tag>
            
            <tag> regex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/2019/03/18/2019-03-18-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2019/03/18/2019-03-18-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>常用正则汇总。</p><a id="more"></a><h1 id="模式匹配修饰符"><a href="#模式匹配修饰符" class="headerlink" title="模式匹配修饰符"></a>模式匹配修饰符</h1><p>i    忽略模式中的大小写<br>m     多行模式<br>o    仅赋值一次<br>s    单行模式，”.”匹配”\n”（默认不匹配）<br>x    忽略模式中的空白<br>g    全局匹配<br>cg    全局匹配失败后，允许再次查找匹配串</p><h1 id="替换操作修饰符"><a href="#替换操作修饰符" class="headerlink" title="替换操作修饰符"></a>替换操作修饰符</h1><p>i    如果在修饰符中加上”i”，则正则将会取消大小写敏感性，即”a”和”A” 是一样的。<br>m    默认的正则开始”^”和结束”$”只是对于正则字符串如果在修饰符中加上”m”，那么开始和结束将会指字符串的每一行：每一行的开头就是”^”，结尾就是”$”。<br>o    表达式只执行一次。<br>s    如果在修饰符中加入”s”，那么默认的”.”代表除了换行符以外的任何字符将会变成任意字符，也就是包括换行符！<br>x    如果加上该修饰符，表达式中的空白字符将会被忽略，除非它已经被转义。<br>g    替换所有匹配的字符串。<br>e    替换字符串作为表达式</p><h1 id="转化操作符"><a href="#转化操作符" class="headerlink" title="转化操作符"></a>转化操作符</h1><p>c    转化所有未指定字符<br>d    删除所有指定字符<br>s    把多个相同的输出字符缩成一个</p><h1 id="更多正则表达式规则"><a href="#更多正则表达式规则" class="headerlink" title="更多正则表达式规则"></a>更多正则表达式规则</h1><p>.     匹配除换行符以外的所有字符<br>x?     匹配 0 次或一次 x 字符串<br>x<em>     匹配 0 次或多次 x 字符串,但匹配可能的最少次数<br>x+     匹配 1 次或多次 x 字符串,但匹配可能的最少次数<br>.</em>     匹配 0 次或多次的任何字符<br>.+     匹配 1 次或多次的任何字符<br>{m}     匹配刚好是 m 个 的指定字符串<br>{m,n}    匹配在 m个 以上 n个 以下 的指定字符串<br>{m,}     匹配 m个 以上 的指定字符串<br>[]     匹配符合 [] 内的字符<br>[^]    匹配不符合 [] 内的字符<br>[0-9]    匹配所有数字字符<br>[a-z]     匹配所有小写字母字符<br>[^0-9]     匹配所有非数字字符<br>[^a-z]    匹配所有非小写字母字符<br>^     匹配字符开头的字符<br>$    匹配字符结尾的字符<br>\d     匹配一个数字的字符,和 [0-9] 语法一样<br>\d+     匹配多个数字字符串,和 [0-9]+ 语法一样<br>\D     非数字,其他同 \d<br>\D+     非数字,其他同 \d+<br>\w     英文字母或数字的字符串,和 [a-zA-Z0-9_] 语法一样<br>\w+     和 [a-zA-Z0-9_]+ 语法一样<br>\W     非英文字母或数字的字符串,和 [^a-zA-Z0-9_] 语法一样<br>\W+     和 [^a-zA-Z0-9_]+ 语法一样<br>\s     空格,和 [\n\t\r\f] 语法一样<br>\s+     和 [\n\t\r\f]+ 一样<br>\S     非空格,和 [^\n\t\r\f] 语法一样<br>\S+     和 [^\n\t\r\f]+ 语法一样<br>\b     匹配以英文字母,数字为边界的字符串<br>\B     匹配不以英文字母,数值为边界的字符串<br>a|b|c     匹配符合a字符 或是b字符 或是c字符 的字符串<br>abc    匹配含有 abc 的字符串 (pattern) () 这个符号会记住所找寻到的字符串,是一个很实用的语法.第一个 () 内所找到的字符串变成 $1 这个变量或是 \1 变量,第二个 () 内所找到的字符串变成 $2 这个变量或是 \2 变量,以此类推下去.<br>/pattern/i     i 这个参数表示忽略英文大小写,也就是在匹配字符串的时候,不考虑英文的大小写问题. \ 如果要在 pattern 模式中找寻一个特殊字符,如 “*”,则要在这个字符前加上 \ 符号,这样才会让特殊字符失效 </p>]]></content>
      
      
      <categories>
          
          <category> regex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> javaScript </tag>
            
            <tag> regex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 数据类型</title>
      <link href="/2019/03/18/2019-03-18-PHP%20%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/03/18/2019-03-18-PHP%20%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>PHP 支持 9 种原始数据类型。<strong>四种标量类型</strong>：boolean（布尔型）integer（整型）float（浮点型，也称作 double)string（字符串）<strong>三种复合类型</strong>：array（数组）object（对象）callable（可调用）<strong>最后是两种特殊类型</strong>：resource（资源）NULL（无类型）<br><strong>伪类型</strong>：mixed（混合类型）number（数字类型）callback（回调类型，又称为 callable）array|object（数组 | 对象类型）void （无类型）</p><a id="more"></a><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>变量的类型通常不是由程序员设定的，是由 PHP 根据该变量使用的上下文在运行时决定的。</p><h3 id="boolean（布尔型）"><a href="#boolean（布尔型）" class="headerlink" title="boolean（布尔型）"></a>boolean（布尔型）</h3><p>要明确地将一个值转换成 boolean，用 (bool) 或者 (boolean) 来强制转换。但是很多情况下不需要用强制转换，因为当运算符，函数或者流程控制结构需要一个 boolean 参数时，该值会被自动转换。</p><p><strong>当转换为 boolean 时，以下值被认为是 FALSE：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">布尔值 FALSE 本身</span><br><span class="line">整型值 0（零）</span><br><span class="line">浮点型值 0.0（零）</span><br><span class="line">空字符串，以及字符串 &quot;0&quot;</span><br><span class="line">不包括任何元素的数组</span><br><span class="line">特殊类型 NULL（包括尚未赋值的变量）</span><br><span class="line">从空标记生成的 SimpleXML 对象 (没有验证过 ...)</span><br></pre></td></tr></table></figure><p><strong>例子</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var_dump(0 == &apos;all&apos;); // true</span><br><span class="line">var_dump((int)&apos;all&apos;); // int(0)</span><br><span class="line"></span><br><span class="line">var_dump(0 == (bool)&apos;all&apos;); // false</span><br><span class="line">var_dump((int)true); // int(1)</span><br></pre></td></tr></table></figure></p><h3 id="integer（整型）"><a href="#integer（整型）" class="headerlink" title="integer（整型）"></a>integer（整型）</h3><p>整型值可以使用十进制，十六进制，八进制或二进制表示，前面可以加上可选的符号（- 或者 +）。要使用八进制表达，数字前必须加上 0（零）。要使用十六进制表达，数字前必须加上 0x。要使用二进制表达，数字前必须加上 0b。用 (int) 或 (integer) 强制转换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var_dump(PHP_INT_SIZE); // 结果：int(4) // 占用4个字节</span><br><span class="line">var_dump(PHP_INT_NAX); // 结果：int(2147483647) // php中int不支持无符号</span><br><span class="line">var_dump(PHP_INT_MIN); // 结果：int(-2147483648)</span><br></pre></td></tr></table></figure><p><strong>例子</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo (int) ( 1.6); // 显示 1  // 当从浮点数转换成整数时，将向下取整。</span><br><span class="line">echo (int)@NaN . PHP_EOL; // int(0) // PHP 7.0.0 起，NaN 和 Infinity 在转换成 integer 时，不再是 undefined 或者依赖于平台，而是都会变成零。</span><br><span class="line">echo (int) ( (0.1+0.7) * 10 ); // 显示 7 // 浮点数强制转换 integer，会出现不可预料的错误</span><br></pre></td></tr></table></figure></p><blockquote><p>待验证：在32位平台上int占4个字节，在64位平台上int占8个字节,16位平台是则分配2个字节<br>整型数的字长和平台有关，尽管通常最大值是大约二十亿（32 位有符号）。64 位平台下的最大值通常是大约 9E18，除了 Windows 下 PHP 7 以前的版本，总是 32 位的。 PHP 不支持无符号的 integer。Integer 值的字长可以用常量 PHP_INT_SIZE来表示，自 PHP 4.4.0 和 PHP 5.0.5后，最大值可以用常量 PHP_INT_MAX 来表示，最小值可以在 PHP 7.0.0 及以后的版本中用常量 PHP_INT_MIN 表示。</p></blockquote><h3 id="float（浮点型，也称作-double"><a href="#float（浮点型，也称作-double" class="headerlink" title="float（浮点型，也称作 double)"></a>float（浮点型，也称作 double)</h3>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP-javaScript-RSA 非对称加密</title>
      <link href="/2019/03/15/2019-04-09-PHP-javaScript-RSA%20%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/"/>
      <url>/2019/03/15/2019-04-09-PHP-javaScript-RSA%20%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>基于 <a href="https://github.com/travist/jsencrypt" target="_blank" rel="noopener">jsencrypt.js</a> 之 javaScript 加密，PHP解密。 (应用于登录注册)。前端后台数据交互需要进行加密之后传输使用，以保证系统数据的安全。非对称加密速度慢，所以只能加密较小的数据。可以在AES 基础上进行RSA 加密(将数据 AES 加密，在用RSA 加密 AES的密钥)。 </p><a id="more"></a><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&apos;&#123;&#123;asset(&quot;js/jsencrypt.min.js&quot;)&#125;&#125;&apos;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var username = &apos;1112223&apos;,</span><br><span class="line">        password = &apos;123456&apos;;</span><br><span class="line">    function rsa(text, key) &#123;</span><br><span class="line">        var encrypt = new JSEncrypt();</span><br><span class="line">        encrypt.setPublicKey(key);</span><br><span class="line">        var encrypted = encrypt.encrypt(text);</span><br><span class="line">        return encrypted;</span><br><span class="line">    &#125;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:&apos;http://www.you.com/test/rsa/public&apos;, // 发送请求获取 公钥</span><br><span class="line">        type:&apos;post&apos;,</span><br><span class="line">        dataType:&apos;json&apos;,</span><br><span class="line">        success:function(data) &#123;</span><br><span class="line">        // data 返回的 public key</span><br><span class="line">            var en = rsa(password, data.result);</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url:&apos;http://www.you.com/test/rsa/doLogin&apos;,</span><br><span class="line">                type:&apos;post&apos;,</span><br><span class="line">                dataType:&apos;json&apos;,</span><br><span class="line">                data:&#123;password:en&#125;,</span><br><span class="line">                success:function(data) &#123;</span><br><span class="line">                    console.log(data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><blockquote><p>确认是否有openssl 扩展</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   $privKey = openssl_pkey_get_private($private_key);</span><br><span class="line">$encrypted = base64_decode($encrypted); // jsencrypt, 默认使用base64 加密，所以需要解密</span><br><span class="line">// Decrypt the data using the private key and store the results in $decrypted</span><br><span class="line">openssl_private_decrypt($encrypted, $decrypted, $privKey); // $encrypted 需要解密的文本</span><br><span class="line">return $decrypted;</span><br></pre></td></tr></table></figure><h4 id="生成私钥、公钥"><a href="#生成私钥、公钥" class="headerlink" title="生成私钥、公钥"></a>生成私钥、公钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$config = array(</span><br><span class="line">        &quot;digest_alg&quot; =&gt; &quot;sha512&quot;,</span><br><span class="line">        &quot;private_key_bits&quot; =&gt; 4096,</span><br><span class="line">        &quot;private_key_type&quot; =&gt; OPENSSL_KEYTYPE_RSA,</span><br><span class="line">    );</span><br><span class="line">$res = openssl_pkey_new($config);</span><br><span class="line">openssl_pkey_export($res, $privKey);</span><br><span class="line">$pubKey = openssl_pkey_get_details($res);</span><br><span class="line">$pubKey = $pubKey[&quot;key&quot;];</span><br><span class="line"></span><br><span class="line">// 将私钥 $privKey , 和公钥 $pubKey 保存起来</span><br><span class="line">file_put_contents(&apos;./cert_public.key&apos;, $pubKey);</span><br><span class="line">file_put_contents(&apos;./cert_private.pem&apos;, $privKey);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> javaScript </tag>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP-javaScript-AES 对称加密</title>
      <link href="/2019/03/15/2019-03-15-php-javascript-AES%20%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/"/>
      <url>/2019/03/15/2019-03-15-php-javascript-AES%20%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>基于 <a href="https://github.com/brix/crypto-js" target="_blank" rel="noopener">Crypto.js</a> 之 javaScript 加密，PHP解密。 (应用于登录注册)。前端后台数据交互需要进行加密之后传输使用，以保证系统数据的安全。</p><a id="more"></a><h3 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;../node_modules/_crypto-js@3.1.9-1@crypto-js/crypto-js.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">var password = &apos;123456&apos;;</span><br><span class="line">var aes_password = encrypt(password);</span><br><span class="line">// aes_password 加密后的数据</span><br><span class="line"></span><br><span class="line">function encrypt(text)&#123;</span><br><span class="line">var key = CryptoJS.enc.Latin1.parse(&apos;AQSWDEFRGT@#$%^&amp;&apos;); //为了避免补位，直接用16位的秘钥</span><br><span class="line">var iv  = CryptoJS.enc.Latin1.parse(&apos;AQSWDE@#$%^&amp;FRGT&apos;); //16位初始向量</span><br><span class="line">var encrypted = CryptoJS.AES.encrypt(text, key, &#123;</span><br><span class="line">iv: iv,</span><br><span class="line">mode:CryptoJS.mode.CBC,</span><br><span class="line">padding:CryptoJS.pad.ZeroPadding</span><br><span class="line">&#125;);</span><br><span class="line">return encrypted.toString();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$key = &quot;AQSWDEFRGT@#$%^&amp;&quot;;</span><br><span class="line">$iv = &quot;AQSWDE@#$%^&amp;FRGT&quot;;</span><br><span class="line">$password = openssl_decrypt($password, &apos;aes-128-cbc&apos;, $key, OPENSSL_ZERO_PADDING , $iv);</span><br></pre></td></tr></table></figure><blockquote><p>如果想做安全一点就是前端和后台是用同一个算法来生成key,使其不是唯一。然后不停的交换秘钥，这种情况下用户只有分析js秘钥生成算法和密文信息才有可能解密出来。</p></blockquote><h3 id="Crypto-js"><a href="#Crypto-js" class="headerlink" title="Crypto.js"></a>Crypto.js</h3>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> javaScript </tag>
            
            <tag> AES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建-LNMP-环境</title>
      <link href="/2018/06/20/2018-06-20-%E6%90%AD%E5%BB%BA-LNMP-%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/06/20/2018-06-20-%E6%90%AD%E5%BB%BA-LNMP-%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>LNMP : linux + nginx1 + mysql5 + php7</p><a id="more"></a><h2 id="依赖文件"><a href="#依赖文件" class="headerlink" title="依赖文件"></a>依赖文件</h2><blockquote><p>我们后边要安装的php、apache、mysql等相关的软件，这些软件都是通过C语言或C++语言编写的，因此需要安装gcc和gcc-c++编译器。</p></blockquote><blockquote><p>zlib软件是后续其他软件的依赖软件，有其他软件有代码优化压缩的作用。</p></blockquote><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><h3 id="下载-nginx"><a href="#下载-nginx" class="headerlink" title="下载 nginx"></a>下载 nginx</h3><ul><li>官网：<a href="http://nginx.org" target="_blank" rel="noopener">http://nginx.org</a></li><li>下载：<a href="http://nginx.org/download/nginx-1.12.2.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-1.12.2.tar.gz</a></li></ul><h3 id="依赖文件-解压-安装"><a href="#依赖文件-解压-安装" class="headerlink" title="依赖文件(解压, 安装)"></a>依赖文件(解压, 安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum -y install pcre-devel</span><br></pre></td></tr></table></figure><ul><li>pcre 是线上产品</li><li>pcre-devel(develop)是开发调试版本产品，里边有一些功能是线上产品不不具备</li><li>pcre：        包括 perl 兼容的正则表达式库</li></ul><h3 id="nginx-install"><a href="#nginx-install" class="headerlink" title="nginx install"></a>nginx install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf nginx-1.12.2.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/nginx --with-http_ssl_module</span><br><span class="line">[root@localhost ~] make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>–with-http_ssl_module            //配置https安全型协议支持</li></ul><h3 id="nginx-目录"><a href="#nginx-目录" class="headerlink" title="nginx 目录"></a>nginx 目录</h3><ul><li>conf：配置文件目录</li><li>html：网站默认请求目录，与apache的htdocs目录作用一致</li><li>logs：记录日志文件目录</li><li>sbin：执行程序文件目录，里边有一个nginx执行程序文件，负责控制nginx服务</li></ul><h3 id="控制服务"><a href="#控制服务" class="headerlink" title="控制服务"></a>控制服务</h3><p>在/usr/local/nginx/sbin目录里边进行服务操控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] ./nginx     开启apache服务</span><br><span class="line">[root@localhost ~] ./nginx -s stop     关闭apache服务</span><br><span class="line">[root@localhost ~] ./nginx -s reload    重启apache服务</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>为了使得外部用户浏览器可以访问到nginx服务效果，还需要把linux系统本身的防火墙给予关闭掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] setup</span><br></pre></td></tr></table></figure><h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><blockquote><p>apache+PHP：php是apache内部的功能模块，它们是包含与被包含的关系<br><img src="https://github.com/chidatian/chidatian.github.io/blob/master/pic/lnmp/apache_php.png" alt></p></blockquote><blockquote><p>nginx+PHP：php作为独立服务运行，与nginx地位平等<br><img src="https://github.com/chidatian/chidatian.github.io/blob/master/pic/lnmp/nginx_php.png" alt></p></blockquote><h3 id="安装-依赖"><a href="#安装-依赖" class="headerlink" title="安装 依赖"></a>安装 依赖</h3><h3 id="php-install"><a href="#php-install" class="headerlink" title="php install"></a>php install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf php-7.0.25.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/php7.0 --with-config-file-path=/usr/local/php7.0/etc --with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir --with-kerberos --with-jpeg-dir --with-libxml-dir --with-mysqli --with-openssl --with-pcre-regex --with-pdo-mysql --with-pear --with-png-dir --with-xmlrpc --with-xsl --with-zlib --enable-bcmath --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --enable-zip --enable-fpm</span><br><span class="line">[root@localhost ~] make &amp;&amp; make install</span><br></pre></td></tr></table></figure><blockquote><p>现在我们给php做configure配置，和 LAMP 不同的是：</p></blockquote><ul><li>去除apache参数</li><li>增加enable-fpm，作用是使得php作为独立服务运行</li><li><p>增加–with-config-file-path参数，设置php.ini配置文件存储目录</p><h3 id="php-目录"><a href="#php-目录" class="headerlink" title="php 目录"></a>php 目录</h3></li><li><p>bin：        运行目录，里边有php脚本文件，可以运行php程序文件。<br>还有用于添加扩展的phpize和php-config等文件</p></li><li>etc：        配置文件目录，马上要把php.ini创建在该目录</li><li>include：    包含目录，其中include/php/ext是php扩展功能目录，<br>例如gd、mysqli、libxml、pcre、pdo等都安装在该目录</li><li>lib：        library资源库目录，<br>其中lib/php/extensions/no-debug-non-zts-20151012<br>目录是用于存储后期给php增加相关功能模块，<br>例如redis.so、memcache.so等都会存储在该目录，<br>并且在php.ini文件中可以直接引入</li><li>sbin：        运行目录，里边的php-fpm是负责管理php服务的</li><li>var：        variable变化目录，该目录中有run和log目录，<br>都是存储php运行过程中产生的日志或临时文件的</li></ul><h3 id="参数-详解"><a href="#参数-详解" class="headerlink" title="参数 详解"></a>参数 详解</h3><ul><li>–with-apxs2=/usr/local/apache2/bin/apxs –&gt; 上边的指令会在安装php的时候就自动生成php模块，名称为libphp7so，并且该模块会生成到apache的对应模块目录(/usr/local/apache2/modules/)里边，然后还会自动去修改httpd.conf文件，使得引入该libphp7.so的模块</li><li>–with-curl –&gt; 打开curl的支持，使得php可以访问其他网站的网址并获得对应的内容，是爬虫技术范畴，file_get_contents(“<a href="http://xxx”)" target="_blank" rel="noopener">http://xxx”)</a>;</li><li>–with-freetype-dir         –&gt;     字体库支持</li><li>–with-gd –&gt; 画图技术支持，我们并不需要主动安装gd库，该gd库已经被集成在php内部(如下图)了，随着php安装gd库也会被自动安装好</li><li>–with-gettext          –&gt;         支持开发多语言系统</li><li>–with-iconv-dir          –&gt;         iconv函数库能够完成各种字符集间的转换</li><li>–with-kerberos          –&gt;         kerberos支持</li><li>–with-jpeg-dir      –&gt;              jpeg图片格式支持</li><li>–with-libxml-dir      –&gt;             libxml2库的支持</li><li>–with-mysqli      –&gt;                 Mysqli数据库的支持</li><li>–with-openssl –&gt; openssl的支持，加密传输时用到的,类似这样的协议<a href="https://xx就需要openssl的技术支持" target="_blank" rel="noopener">https://xx就需要openssl的技术支持</a></li><li>–with-pcre-regex      –&gt;             正则表达式支持</li><li>–with-pdo-mysql          –&gt;         pdo-mysql支持</li><li>–with-pear          –&gt;  pear是PHP的扩展和应用程序库，包含了很多有用的类</li><li>–with-png-dir      –&gt;             png图片格式支持</li><li>–with-xmlrpc      –&gt;                 xml相关的扩展库支持</li><li>–with-xsl          –&gt;             打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件</li><li>–with-zlib          –&gt;             zlib压缩库支持</li><li>–enable-bcmath      –&gt;             图片大小调整技术支持</li><li>–enable-libxml      –&gt;             xml支持</li><li>–enable-inline-optimization –&gt;      优化线程，给php整体做性能优化处理</li><li>–enable-gd-native-ttf  –&gt;         画图字体库支持，支持TrueType字符串函数库</li><li>–enable-mbregex          –&gt;         正则表达式支持</li><li>–enable-mbstring      –&gt;             mb宽字节函数库支持</li><li>–enable-opcache          –&gt;         缓存支持</li><li>–enable-pcntl          –&gt;         pcntl扩展可以支持php的多线程操作</li><li>–enable-shmop      –&gt;             shmop是一个易于使用的功能集，允许PHP读，写，创建和删除UNIX共享内存段</li><li>–enable-sysvsem        –&gt;         作用同上</li><li>–enable-soap          –&gt;         SOAP 的全称为简单对象访问协议 (Simple Object Access Protocol)。它是一种基于 XML 的，可扩展的通信协议。SOAP 提供了一种标准，使得运行在不同平台上并使用不同的编程语言编写的应用程序可以互相进行通信</li><li>–enable-sockets          –&gt;         sockets 支持</li><li>–enable-xml          –&gt;             xml支持</li><li>–enable-zip         –&gt;             php支持对zip压缩包处理</li></ul><p>(上述有一些配置参数没有设置依赖软件的路径名，其会到系统默认位置找到对应的软件，如果依赖软件没有安装到系统默认位置，则需要通过完整路径名显示设置好。还有一些配置参数本身就是“是或否”的意思，则不需要设置依赖路径名)</p><h3 id="制作php-ini文件"><a href="#制作php-ini文件" class="headerlink" title="制作php.ini文件"></a>制作php.ini文件</h3><p>在php解压目录里边把php.ini-development 复制到/usr/local/php7.0/lib/php.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] cp php.ini-development /usr/local/php7.0/lib/php.ini</span><br></pre></td></tr></table></figure><h3 id="服务配置文件"><a href="#服务配置文件" class="headerlink" title="服务配置文件"></a>服务配置文件</h3><p>php是作为独立服务与nginx进行合作工作的，现在需要给“php服务”创建配置文件</p><h4 id="创建主配置文件"><a href="#创建主配置文件" class="headerlink" title="创建主配置文件"></a>创建主配置文件</h4><blockquote><p>把php-fpm.conf.default文件复制到当前目录并改名字为php-fpm.conf，这个文件就是“php服务”的主配置文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] pwd</span><br><span class="line">/usr/local/php7.0/etc</span><br><span class="line">[root@localhost ~] cp php-fpm.conf.default php-fpm.conf</span><br></pre></td></tr></table></figure><h4 id="辅助配置文件"><a href="#辅助配置文件" class="headerlink" title="辅助配置文件"></a>辅助配置文件</h4><blockquote><p>/usr/local/php7.0/etc/php-fpm.d/<a href="http://www.conf.default" target="_blank" rel="noopener">www.conf.default</a> 辅助配置文件<br>在“辅助配置文件”中有“php服务”运行的详细参数(例如服务的端口号码9000等)，只有被主配置文件引入后php服务才可以正常运行代表对辅助配置文件进行引入，但是辅助配置文件需要改名字为.conf后缀的</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] pwd</span><br><span class="line">/usr/local/php7.0/etc/php-fpm.d</span><br><span class="line">[root@localhost ~] cp www.conf.default www.conf</span><br></pre></td></tr></table></figure><h4 id="服务控制"><a href="#服务控制" class="headerlink" title="服务控制"></a>服务控制</h4><ul><li>php-fpm            启动</li><li>killall php-fpm     关闭</li></ul><h2 id="nginx与php结合"><a href="#nginx与php结合" class="headerlink" title="nginx与php结合"></a>nginx与php结合</h2><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><h3 id="卸载旧的-MySQL-同apache"><a href="#卸载旧的-MySQL-同apache" class="headerlink" title="卸载旧的 MySQL, 同apache"></a>卸载旧的 MySQL, 同apache</h3><h3 id="下载mysql组件"><a href="#下载mysql组件" class="headerlink" title="下载mysql组件"></a>下载mysql组件</h3><ul><li>官网：<a href="https://www.mysql.com" target="_blank" rel="noopener">https://www.mysql.com</a></li><li>下载地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></li></ul><h3 id="MySQL-install"><a href="#MySQL-install" class="headerlink" title="MySQL install"></a>MySQL install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root ~] rpm -ivh mysql-community-common-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-libs-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-client-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-server-5.7.20-1.el6.i686.rpm</span><br></pre></td></tr></table></figure><blockquote><p>以上组件的安装是有自上而下的顺序要求，因为它们彼此有依赖关系。</p></blockquote><h3 id="服务控制-1"><a href="#服务控制-1" class="headerlink" title="服务控制"></a>服务控制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] service mysqld start[/stop/restart]</span><br></pre></td></tr></table></figure><h3 id="查看默认的root帐号密码"><a href="#查看默认的root帐号密码" class="headerlink" title="查看默认的root帐号密码"></a>查看默认的root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] grep &quot;root@localhost&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h3 id="修改root帐号密码"><a href="#修改root帐号密码" class="headerlink" title="修改root帐号密码"></a>修改root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h3 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h3><p>在配置文件最后添加以下内容：</p><ul><li>连接mysql时的字符集设置为utf8mb4<br>init-connect=’SET NAMES utf8mb4’</li><li>默认存储引擎为INNODB<br>default-storage-engine=INNODB</li><li>服务器端字符集设置为utf8mb4<br>character-set-server=utf8mb4<br>[mysql]</li><li>mysql本身字符集设置为utf8mb4<br>default-character-set = utf8mb4<br>[client]</li><li>客户端操作mysql时字符集设置为utf8mb4<br>default-character-set = utf8mb4</li></ul><blockquote><p>工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> env </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建-LAMP-环境</title>
      <link href="/2018/05/10/2018-05-10-%E6%90%AD%E5%BB%BA-LAMP-%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/05/10/2018-05-10-%E6%90%AD%E5%BB%BA-LAMP-%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>LAMP : linux + apache2 + mysql5 + php7</p><a id="more"></a><h2 id="删除旧的-apache"><a href="#删除旧的-apache" class="headerlink" title="删除旧的 apache"></a>删除旧的 apache</h2><blockquote><p>把操作系统默认安装的apache给卸载掉，避免与我们要安装的有冲突</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum list installed | grep httpd</span><br></pre></td></tr></table></figure><blockquote><p>卸载与httpd有关系的软件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum -y remove httpd</span><br><span class="line">[root@localhost ~] yum -y remove httpd-tools</span><br></pre></td></tr></table></figure><blockquote><p>再整个系统中找与httpd有关系的文件或目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] find / -name httpd</span><br></pre></td></tr></table></figure><blockquote><p>删除与httpd有关系的文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] rm -rf /etc/httpd</span><br><span class="line">[root@localhost ~] rm -rf /usr/lib/httpd</span><br></pre></td></tr></table></figure><h3 id="依赖文件"><a href="#依赖文件" class="headerlink" title="依赖文件"></a>依赖文件</h3><blockquote><p>我们后边要安装的php、apache、mysql等相关的软件，这些软件都是通过C语言或C++语言编写的，因此需要安装gcc和gcc-c++编译器。</p></blockquote><blockquote><p>zlib软件是后续其他软件的依赖软件，有其他软件有代码优化压缩的作用。</p></blockquote><h2 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h2><h3 id="依赖文件-解压-安装"><a href="#依赖文件-解压-安装" class="headerlink" title="依赖文件(解压, 安装)"></a>依赖文件(解压, 安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf apr-1.5.2.tar.gz </span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/apr</span><br><span class="line">[root@localhost ~] tar zxf apr-util-1.5.4.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr</span><br><span class="line">[root@localhost ~] tar zxf pcre-8.40.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/pcre</span><br></pre></td></tr></table></figure><h3 id="apache-install"><a href="#apache-install" class="headerlink" title="apache install"></a>apache install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf httpd-2.4.29.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/apache2 --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --with-pcre=/usr/local/pcre --with-z=/usr/local/zlib --enable-so --enable-rewrite</span><br><span class="line">[root@localhost ~] make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>–enable-so            让apache激活并可以识别使用so后缀的功能模块</li><li>–enable-rewrite    开启重写模块(可以修改地址栏信息，例如隐藏index.php入口文件)</li></ul><h3 id="控制服务"><a href="#控制服务" class="headerlink" title="控制服务"></a>控制服务</h3><p>在/usr/local/apache2/bin目录里边进行服务操控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] ./apachectl start     开启apache服务</span><br><span class="line">[root@localhost ~] ./apachectl stop     关闭apache服务</span><br><span class="line">[root@localhost ~] ./apachectl restart     重启apache服务</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>为了使得外部用户浏览器可以访问到apache服务效果，还需要把linux系统本身的防火墙给予关闭掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] setup</span><br></pre></td></tr></table></figure><h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><h3 id="安装-依赖"><a href="#安装-依赖" class="headerlink" title="安装 依赖"></a>安装 依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum -y install libxml2-devel</span><br><span class="line">xml库依赖支持</span><br><span class="line">[root@localhost ~] yum -y install openssl-devel</span><br><span class="line">openssl：支持安全传输协议https</span><br><span class="line">[root@localhost ~] yum -y install libcurl-devel</span><br><span class="line">curl是服务器彼此间调用的接口，常用于爬虫技术</span><br><span class="line">[root@localhost ~] yum -y install libjpeg-turbo-devel</span><br><span class="line">[root@localhost ~] yum -y install libpng-devel</span><br><span class="line">png图片格式支持</span><br><span class="line">[root@localhost ~] yum -y install freetype-devel</span><br><span class="line">画图字体库支持</span><br><span class="line">[root@localhost ~] yum -y install libxslt-devel</span><br><span class="line">打开XSLT 文件支持，扩展了libXML2库</span><br></pre></td></tr></table></figure><h3 id="php-install"><a href="#php-install" class="headerlink" title="php install"></a>php install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf php-7.0.25.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/php7.0 --with-apxs2=/usr/local/apache2/bin/apxs --with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir --with-kerberos --with-jpeg-dir --with-libxml-dir --with-mysqli --with-openssl --with-pcre-regex --with-pdo-mysql --with-pear --with-png-dir --with-xmlrpc --with-xsl --with-zlib --enable-bcmath --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --enable-zip</span><br></pre></td></tr></table></figure><h3 id="参数-详解"><a href="#参数-详解" class="headerlink" title="参数 详解"></a>参数 详解</h3><ul><li>–with-apxs2=/usr/local/apache2/bin/apxs –&gt; 上边的指令会在安装php的时候就自动生成php模块，名称为libphp7so，并且该模块会生成到apache的对应模块目录(/usr/local/apache2/modules/)里边，然后还会自动去修改httpd.conf文件，使得引入该libphp7.so的模块</li><li>–with-curl –&gt; 打开curl的支持，使得php可以访问其他网站的网址并获得对应的内容，是爬虫技术范畴，file_get_contents(“<a href="http://xxx”)" target="_blank" rel="noopener">http://xxx”)</a>;</li><li>–with-freetype-dir         –&gt;     字体库支持</li><li>–with-gd –&gt; 画图技术支持，我们并不需要主动安装gd库，该gd库已经被集成在php内部(如下图)了，随着php安装gd库也会被自动安装好</li><li>–with-gettext          –&gt;         支持开发多语言系统</li><li>–with-iconv-dir          –&gt;         iconv函数库能够完成各种字符集间的转换</li><li>–with-kerberos          –&gt;         kerberos支持</li><li>–with-jpeg-dir      –&gt;              jpeg图片格式支持</li><li>–with-libxml-dir      –&gt;             libxml2库的支持</li><li>–with-mysqli      –&gt;                 Mysqli数据库的支持</li><li>–with-openssl –&gt; openssl的支持，加密传输时用到的,类似这样的协议<a href="https://xx就需要openssl的技术支持" target="_blank" rel="noopener">https://xx就需要openssl的技术支持</a></li><li>–with-pcre-regex      –&gt;             正则表达式支持</li><li>–with-pdo-mysql          –&gt;         pdo-mysql支持</li><li>–with-pear          –&gt;  pear是PHP的扩展和应用程序库，包含了很多有用的类</li><li>–with-png-dir      –&gt;             png图片格式支持</li><li>–with-xmlrpc      –&gt;                 xml相关的扩展库支持</li><li>–with-xsl          –&gt;             打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件</li><li>–with-zlib          –&gt;             zlib压缩库支持</li><li>–enable-bcmath      –&gt;             图片大小调整技术支持</li><li>–enable-libxml      –&gt;             xml支持</li><li>–enable-inline-optimization –&gt;      优化线程，给php整体做性能优化处理</li><li>–enable-gd-native-ttf  –&gt;         画图字体库支持，支持TrueType字符串函数库</li><li>–enable-mbregex          –&gt;         正则表达式支持</li><li>–enable-mbstring      –&gt;             mb宽字节函数库支持</li><li>–enable-opcache          –&gt;         缓存支持</li><li>–enable-pcntl          –&gt;         pcntl扩展可以支持php的多线程操作</li><li>–enable-shmop      –&gt;             shmop是一个易于使用的功能集，允许PHP读，写，创建和删除UNIX共享内存段</li><li>–enable-sysvsem        –&gt;         作用同上</li><li>–enable-soap          –&gt;         SOAP 的全称为简单对象访问协议 (Simple Object Access Protocol)。它是一种基于 XML 的，可扩展的通信协议。SOAP 提供了一种标准，使得运行在不同平台上并使用不同的编程语言编写的应用程序可以互相进行通信</li><li>–enable-sockets          –&gt;         sockets 支持</li><li>–enable-xml          –&gt;             xml支持</li><li>–enable-zip         –&gt;             php支持对zip压缩包处理</li></ul><p>(上述有一些配置参数没有设置依赖软件的路径名，其会到系统默认位置找到对应的软件，如果依赖软件没有安装到系统默认位置，则需要通过完整路径名显示设置好。还有一些配置参数本身就是“是或否”的意思，则不需要设置依赖路径名)</p><h3 id="制作php-ini文件"><a href="#制作php-ini文件" class="headerlink" title="制作php.ini文件"></a>制作php.ini文件</h3><p>在php解压目录里边把php.ini-development 复制到/usr/local/php7.0/lib/php.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] cp php.ini-development /usr/local/php7.0/lib/php.ini</span><br></pre></td></tr></table></figure><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><h3 id="卸载旧的-MySQL-同apache"><a href="#卸载旧的-MySQL-同apache" class="headerlink" title="卸载旧的 MySQL, 同apache"></a>卸载旧的 MySQL, 同apache</h3><h3 id="下载mysql组件"><a href="#下载mysql组件" class="headerlink" title="下载mysql组件"></a>下载mysql组件</h3><ul><li>官网：<a href="https://www.mysql.com" target="_blank" rel="noopener">https://www.mysql.com</a></li><li>下载地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></li></ul><h3 id="MySQL-install"><a href="#MySQL-install" class="headerlink" title="MySQL install"></a>MySQL install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root ~] rpm -ivh mysql-community-common-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-libs-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-client-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-server-5.7.20-1.el6.i686.rpm</span><br></pre></td></tr></table></figure><blockquote><p>以上组件的安装是有自上而下的顺序要求，因为它们彼此有依赖关系。</p></blockquote><h3 id="服务控制"><a href="#服务控制" class="headerlink" title="服务控制"></a>服务控制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] service mysqld start[/stop/restart]</span><br></pre></td></tr></table></figure><h3 id="查看默认的root帐号密码"><a href="#查看默认的root帐号密码" class="headerlink" title="查看默认的root帐号密码"></a>查看默认的root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] grep &quot;root@localhost&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h3 id="修改root帐号密码"><a href="#修改root帐号密码" class="headerlink" title="修改root帐号密码"></a>修改root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h3 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h3><p>在配置文件最后添加以下内容：</p><ul><li>连接mysql时的字符集设置为utf8mb4<br>init-connect=’SET NAMES utf8mb4’</li><li>默认存储引擎为INNODB<br>default-storage-engine=INNODB</li><li>服务器端字符集设置为utf8mb4<br>character-set-server=utf8mb4<br>[mysql]</li><li>mysql本身字符集设置为utf8mb4<br>default-character-set = utf8mb4<br>[client]</li><li>客户端操作mysql时字符集设置为utf8mb4<br>default-character-set = utf8mb4</li></ul><blockquote><p>工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> env </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> linux </tag>
            
            <tag> apache </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2017/03/16/hello-world/"/>
      <url>/2017/03/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
