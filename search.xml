<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>正则表达式</title>
      <link href="/2019/03/18/2019-03-18-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2019/03/18/2019-03-18-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>常用正则汇总。</p><a id="more"></a><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><blockquote><p><a href="http://php.net/manual/zh/function.preg-match.php" target="_blank" rel="noopener">preg_match ( string $pattern , string $subject ) : int </a>搜索subject与pattern给定的正则表达式的一个匹配.</p></blockquote><p><strong>密码规范</strong> 包括8 - 16 大小写，符号数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9!@#$%*()_+^&amp;]&#123;8,16&#125;$/</span><br></pre></td></tr></table></figure><p><strong>手机号</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^1[3|4|5|7|8][0-9]\d&#123;4,8&#125;$/</span><br></pre></td></tr></table></figure><h3 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var reg = /.../</span><br><span class="line"></span><br><span class="line">reg.test(&apos;18332566840&apos;) //返回 true false</span><br><span class="line"></span><br><span class="line">str.match(reg)//返回 null</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> regex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> javaScript </tag>
            
            <tag> regex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 数据类型</title>
      <link href="/2019/03/18/2019-03-18-PHP%20%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/03/18/2019-03-18-PHP%20%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>PHP 支持 9 种原始数据类型。<strong>四种标量类型</strong>：boolean（布尔型）integer（整型）float（浮点型，也称作 double)string（字符串）<strong>三种复合类型</strong>：array（数组）object（对象）callable（可调用）<strong>最后是两种特殊类型</strong>：resource（资源）NULL（无类型）<br><strong>伪类型</strong>：mixed（混合类型）number（数字类型）callback（回调类型，又称为 callable）array|object（数组 | 对象类型）void （无类型）</p><a id="more"></a><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>变量的类型通常不是由程序员设定的，是由 PHP 根据该变量使用的上下文在运行时决定的。</p><h3 id="boolean（布尔型）"><a href="#boolean（布尔型）" class="headerlink" title="boolean（布尔型）"></a>boolean（布尔型）</h3><p>要明确地将一个值转换成 boolean，用 (bool) 或者 (boolean) 来强制转换。但是很多情况下不需要用强制转换，因为当运算符，函数或者流程控制结构需要一个 boolean 参数时，该值会被自动转换。</p><p><strong>当转换为 boolean 时，以下值被认为是 FALSE：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">布尔值 FALSE 本身</span><br><span class="line">整型值 0（零）</span><br><span class="line">浮点型值 0.0（零）</span><br><span class="line">空字符串，以及字符串 &quot;0&quot;</span><br><span class="line">不包括任何元素的数组</span><br><span class="line">特殊类型 NULL（包括尚未赋值的变量）</span><br><span class="line">从空标记生成的 SimpleXML 对象 (没有验证过 ...)</span><br></pre></td></tr></table></figure><p><strong>例子</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var_dump(0 == &apos;all&apos;); // true</span><br><span class="line">var_dump((int)&apos;all&apos;); // int(0)</span><br><span class="line"></span><br><span class="line">var_dump(0 == (bool)&apos;all&apos;); // false</span><br><span class="line">var_dump((int)true); // int(1)</span><br></pre></td></tr></table></figure></p><h3 id="integer（整型）"><a href="#integer（整型）" class="headerlink" title="integer（整型）"></a>integer（整型）</h3><p>整型值可以使用十进制，十六进制，八进制或二进制表示，前面可以加上可选的符号（- 或者 +）。要使用八进制表达，数字前必须加上 0（零）。要使用十六进制表达，数字前必须加上 0x。要使用二进制表达，数字前必须加上 0b。用 (int) 或 (integer) 强制转换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var_dump(PHP_INT_SIZE); // 结果：int(4) // 占用4个字节</span><br><span class="line">var_dump(PHP_INT_NAX); // 结果：int(2147483647) // php中int不支持无符号</span><br><span class="line">var_dump(PHP_INT_MIN); // 结果：int(-2147483648)</span><br></pre></td></tr></table></figure><p><strong>例子</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo (int) ( 1.6); // 显示 1  // 当从浮点数转换成整数时，将向下取整。</span><br><span class="line">echo (int)@NaN . PHP_EOL; // int(0) // PHP 7.0.0 起，NaN 和 Infinity 在转换成 integer 时，不再是 undefined 或者依赖于平台，而是都会变成零。</span><br><span class="line">echo (int) ( (0.1+0.7) * 10 ); // 显示 7 // 浮点数强制转换 integer，会出现不可预料的错误</span><br></pre></td></tr></table></figure></p><blockquote><p>待验证：在32位平台上int占4个字节，在64位平台上int占8个字节,16位平台是则分配2个字节<br>整型数的字长和平台有关，尽管通常最大值是大约二十亿（32 位有符号）。64 位平台下的最大值通常是大约 9E18，除了 Windows 下 PHP 7 以前的版本，总是 32 位的。 PHP 不支持无符号的 integer。Integer 值的字长可以用常量 PHP_INT_SIZE来表示，自 PHP 4.4.0 和 PHP 5.0.5后，最大值可以用常量 PHP_INT_MAX 来表示，最小值可以在 PHP 7.0.0 及以后的版本中用常量 PHP_INT_MIN 表示。</p></blockquote><h3 id="float（浮点型，也称作-double"><a href="#float（浮点型，也称作-double" class="headerlink" title="float（浮点型，也称作 double)"></a>float（浮点型，也称作 double)</h3>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP-javaScript-AES 对称加密</title>
      <link href="/2019/03/15/2019-03-15-php-javascript-AES%20%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/"/>
      <url>/2019/03/15/2019-03-15-php-javascript-AES%20%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>基于 <a href="https://github.com/brix/crypto-js" target="_blank" rel="noopener">Crypto.js</a> 之 javaScript 加密，PHP解密。 (应用于登录注册)。前端后台数据交互需要进行加密之后传输使用，以保证系统数据的安全。</p><a id="more"></a><h3 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;../node_modules/_crypto-js@3.1.9-1@crypto-js/crypto-js.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">var password = &apos;123456&apos;;</span><br><span class="line">var aes_password = encrypt(password);</span><br><span class="line">// aes_password 加密后的数据</span><br><span class="line"></span><br><span class="line">function encrypt(text)&#123;</span><br><span class="line">var key = CryptoJS.enc.Latin1.parse(&apos;AQSWDEFRGT@#$%^&amp;&apos;); //为了避免补位，直接用16位的秘钥</span><br><span class="line">var iv  = CryptoJS.enc.Latin1.parse(&apos;AQSWDE@#$%^&amp;FRGT&apos;); //16位初始向量</span><br><span class="line">var encrypted = CryptoJS.AES.encrypt(text, key, &#123;</span><br><span class="line">iv: iv,</span><br><span class="line">mode:CryptoJS.mode.CBC,</span><br><span class="line">padding:CryptoJS.pad.ZeroPadding</span><br><span class="line">&#125;);</span><br><span class="line">return encrypted.toString();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$key = &quot;AQSWDEFRGT@#$%^&amp;&quot;;</span><br><span class="line">$iv = &quot;AQSWDE@#$%^&amp;FRGT&quot;;</span><br><span class="line">$password = openssl_decrypt($password, &apos;aes-128-cbc&apos;, $key, OPENSSL_ZERO_PADDING , $iv);</span><br></pre></td></tr></table></figure><h3 id="Crypto-js"><a href="#Crypto-js" class="headerlink" title="Crypto.js"></a>Crypto.js</h3>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> javaScript </tag>
            
            <tag> AES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建-LNMP-环境</title>
      <link href="/2018/06/20/2018-06-20-%E6%90%AD%E5%BB%BA-LNMP-%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/06/20/2018-06-20-%E6%90%AD%E5%BB%BA-LNMP-%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>LNMP : linux + nginx1 + mysql5 + php7</p><a id="more"></a><h2 id="依赖文件"><a href="#依赖文件" class="headerlink" title="依赖文件"></a>依赖文件</h2><blockquote><p>我们后边要安装的php、apache、mysql等相关的软件，这些软件都是通过C语言或C++语言编写的，因此需要安装gcc和gcc-c++编译器。</p></blockquote><blockquote><p>zlib软件是后续其他软件的依赖软件，有其他软件有代码优化压缩的作用。</p></blockquote><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><h3 id="下载-nginx"><a href="#下载-nginx" class="headerlink" title="下载 nginx"></a>下载 nginx</h3><ul><li>官网：<a href="http://nginx.org" target="_blank" rel="noopener">http://nginx.org</a></li><li>下载：<a href="http://nginx.org/download/nginx-1.12.2.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-1.12.2.tar.gz</a></li></ul><h3 id="依赖文件-解压-安装"><a href="#依赖文件-解压-安装" class="headerlink" title="依赖文件(解压, 安装)"></a>依赖文件(解压, 安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum -y install pcre-devel</span><br></pre></td></tr></table></figure><ul><li>pcre 是线上产品</li><li>pcre-devel(develop)是开发调试版本产品，里边有一些功能是线上产品不不具备</li><li>pcre：        包括 perl 兼容的正则表达式库</li></ul><h3 id="nginx-install"><a href="#nginx-install" class="headerlink" title="nginx install"></a>nginx install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf nginx-1.12.2.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/nginx --with-http_ssl_module</span><br><span class="line">[root@localhost ~] make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>–with-http_ssl_module            //配置https安全型协议支持</li></ul><h3 id="nginx-目录"><a href="#nginx-目录" class="headerlink" title="nginx 目录"></a>nginx 目录</h3><ul><li>conf：配置文件目录</li><li>html：网站默认请求目录，与apache的htdocs目录作用一致</li><li>logs：记录日志文件目录</li><li>sbin：执行程序文件目录，里边有一个nginx执行程序文件，负责控制nginx服务</li></ul><h3 id="控制服务"><a href="#控制服务" class="headerlink" title="控制服务"></a>控制服务</h3><p>在/usr/local/nginx/sbin目录里边进行服务操控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] ./nginx     开启apache服务</span><br><span class="line">[root@localhost ~] ./nginx -s stop     关闭apache服务</span><br><span class="line">[root@localhost ~] ./nginx -s reload    重启apache服务</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>为了使得外部用户浏览器可以访问到nginx服务效果，还需要把linux系统本身的防火墙给予关闭掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] setup</span><br></pre></td></tr></table></figure><h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><blockquote><p>apache+PHP：php是apache内部的功能模块，它们是包含与被包含的关系<br><img src="https://github.com/chidatian/chidatian.github.io/blob/master/pic/lnmp/apache_php.png" alt></p></blockquote><blockquote><p>nginx+PHP：php作为独立服务运行，与nginx地位平等<br><img src="https://github.com/chidatian/chidatian.github.io/blob/master/pic/lnmp/nginx_php.png" alt></p></blockquote><h3 id="安装-依赖"><a href="#安装-依赖" class="headerlink" title="安装 依赖"></a>安装 依赖</h3><h3 id="php-install"><a href="#php-install" class="headerlink" title="php install"></a>php install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf php-7.0.25.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/php7.0 --with-config-file-path=/usr/local/php7.0/etc --with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir --with-kerberos --with-jpeg-dir --with-libxml-dir --with-mysqli --with-openssl --with-pcre-regex --with-pdo-mysql --with-pear --with-png-dir --with-xmlrpc --with-xsl --with-zlib --enable-bcmath --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --enable-zip --enable-fpm</span><br><span class="line">[root@localhost ~] make &amp;&amp; make install</span><br></pre></td></tr></table></figure><blockquote><p>现在我们给php做configure配置，和 LAMP 不同的是：</p></blockquote><ul><li>去除apache参数</li><li>增加enable-fpm，作用是使得php作为独立服务运行</li><li><p>增加–with-config-file-path参数，设置php.ini配置文件存储目录</p><h3 id="php-目录"><a href="#php-目录" class="headerlink" title="php 目录"></a>php 目录</h3></li><li><p>bin：        运行目录，里边有php脚本文件，可以运行php程序文件。<br>还有用于添加扩展的phpize和php-config等文件</p></li><li>etc：        配置文件目录，马上要把php.ini创建在该目录</li><li>include：    包含目录，其中include/php/ext是php扩展功能目录，<br>例如gd、mysqli、libxml、pcre、pdo等都安装在该目录</li><li>lib：        library资源库目录，<br>其中lib/php/extensions/no-debug-non-zts-20151012<br>目录是用于存储后期给php增加相关功能模块，<br>例如redis.so、memcache.so等都会存储在该目录，<br>并且在php.ini文件中可以直接引入</li><li>sbin：        运行目录，里边的php-fpm是负责管理php服务的</li><li>var：        variable变化目录，该目录中有run和log目录，<br>都是存储php运行过程中产生的日志或临时文件的</li></ul><h3 id="参数-详解"><a href="#参数-详解" class="headerlink" title="参数 详解"></a>参数 详解</h3><ul><li>–with-apxs2=/usr/local/apache2/bin/apxs –&gt; 上边的指令会在安装php的时候就自动生成php模块，名称为libphp7so，并且该模块会生成到apache的对应模块目录(/usr/local/apache2/modules/)里边，然后还会自动去修改httpd.conf文件，使得引入该libphp7.so的模块</li><li>–with-curl –&gt; 打开curl的支持，使得php可以访问其他网站的网址并获得对应的内容，是爬虫技术范畴，file_get_contents(“<a href="http://xxx”)" target="_blank" rel="noopener">http://xxx”)</a>;</li><li>–with-freetype-dir         –&gt;     字体库支持</li><li>–with-gd –&gt; 画图技术支持，我们并不需要主动安装gd库，该gd库已经被集成在php内部(如下图)了，随着php安装gd库也会被自动安装好</li><li>–with-gettext          –&gt;         支持开发多语言系统</li><li>–with-iconv-dir          –&gt;         iconv函数库能够完成各种字符集间的转换</li><li>–with-kerberos          –&gt;         kerberos支持</li><li>–with-jpeg-dir      –&gt;              jpeg图片格式支持</li><li>–with-libxml-dir      –&gt;             libxml2库的支持</li><li>–with-mysqli      –&gt;                 Mysqli数据库的支持</li><li>–with-openssl –&gt; openssl的支持，加密传输时用到的,类似这样的协议<a href="https://xx就需要openssl的技术支持" target="_blank" rel="noopener">https://xx就需要openssl的技术支持</a></li><li>–with-pcre-regex      –&gt;             正则表达式支持</li><li>–with-pdo-mysql          –&gt;         pdo-mysql支持</li><li>–with-pear          –&gt;  pear是PHP的扩展和应用程序库，包含了很多有用的类</li><li>–with-png-dir      –&gt;             png图片格式支持</li><li>–with-xmlrpc      –&gt;                 xml相关的扩展库支持</li><li>–with-xsl          –&gt;             打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件</li><li>–with-zlib          –&gt;             zlib压缩库支持</li><li>–enable-bcmath      –&gt;             图片大小调整技术支持</li><li>–enable-libxml      –&gt;             xml支持</li><li>–enable-inline-optimization –&gt;      优化线程，给php整体做性能优化处理</li><li>–enable-gd-native-ttf  –&gt;         画图字体库支持，支持TrueType字符串函数库</li><li>–enable-mbregex          –&gt;         正则表达式支持</li><li>–enable-mbstring      –&gt;             mb宽字节函数库支持</li><li>–enable-opcache          –&gt;         缓存支持</li><li>–enable-pcntl          –&gt;         pcntl扩展可以支持php的多线程操作</li><li>–enable-shmop      –&gt;             shmop是一个易于使用的功能集，允许PHP读，写，创建和删除UNIX共享内存段</li><li>–enable-sysvsem        –&gt;         作用同上</li><li>–enable-soap          –&gt;         SOAP 的全称为简单对象访问协议 (Simple Object Access Protocol)。它是一种基于 XML 的，可扩展的通信协议。SOAP 提供了一种标准，使得运行在不同平台上并使用不同的编程语言编写的应用程序可以互相进行通信</li><li>–enable-sockets          –&gt;         sockets 支持</li><li>–enable-xml          –&gt;             xml支持</li><li>–enable-zip         –&gt;             php支持对zip压缩包处理</li></ul><p>(上述有一些配置参数没有设置依赖软件的路径名，其会到系统默认位置找到对应的软件，如果依赖软件没有安装到系统默认位置，则需要通过完整路径名显示设置好。还有一些配置参数本身就是“是或否”的意思，则不需要设置依赖路径名)</p><h3 id="制作php-ini文件"><a href="#制作php-ini文件" class="headerlink" title="制作php.ini文件"></a>制作php.ini文件</h3><p>在php解压目录里边把php.ini-development 复制到/usr/local/php7.0/lib/php.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] cp php.ini-development /usr/local/php7.0/lib/php.ini</span><br></pre></td></tr></table></figure><h3 id="服务配置文件"><a href="#服务配置文件" class="headerlink" title="服务配置文件"></a>服务配置文件</h3><p>php是作为独立服务与nginx进行合作工作的，现在需要给“php服务”创建配置文件</p><h4 id="创建主配置文件"><a href="#创建主配置文件" class="headerlink" title="创建主配置文件"></a>创建主配置文件</h4><blockquote><p>把php-fpm.conf.default文件复制到当前目录并改名字为php-fpm.conf，这个文件就是“php服务”的主配置文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] pwd</span><br><span class="line">/usr/local/php7.0/etc</span><br><span class="line">[root@localhost ~] cp php-fpm.conf.default php-fpm.conf</span><br></pre></td></tr></table></figure><h4 id="辅助配置文件"><a href="#辅助配置文件" class="headerlink" title="辅助配置文件"></a>辅助配置文件</h4><blockquote><p>/usr/local/php7.0/etc/php-fpm.d/<a href="http://www.conf.default" target="_blank" rel="noopener">www.conf.default</a> 辅助配置文件<br>在“辅助配置文件”中有“php服务”运行的详细参数(例如服务的端口号码9000等)，只有被主配置文件引入后php服务才可以正常运行代表对辅助配置文件进行引入，但是辅助配置文件需要改名字为.conf后缀的</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] pwd</span><br><span class="line">/usr/local/php7.0/etc/php-fpm.d</span><br><span class="line">[root@localhost ~] cp www.conf.default www.conf</span><br></pre></td></tr></table></figure><h4 id="服务控制"><a href="#服务控制" class="headerlink" title="服务控制"></a>服务控制</h4><ul><li>php-fpm            启动</li><li>killall php-fpm     关闭</li></ul><h2 id="nginx与php结合"><a href="#nginx与php结合" class="headerlink" title="nginx与php结合"></a>nginx与php结合</h2><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><h3 id="卸载旧的-MySQL-同apache"><a href="#卸载旧的-MySQL-同apache" class="headerlink" title="卸载旧的 MySQL, 同apache"></a>卸载旧的 MySQL, 同apache</h3><h3 id="下载mysql组件"><a href="#下载mysql组件" class="headerlink" title="下载mysql组件"></a>下载mysql组件</h3><ul><li>官网：<a href="https://www.mysql.com" target="_blank" rel="noopener">https://www.mysql.com</a></li><li>下载地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></li></ul><h3 id="MySQL-install"><a href="#MySQL-install" class="headerlink" title="MySQL install"></a>MySQL install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root ~] rpm -ivh mysql-community-common-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-libs-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-client-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-server-5.7.20-1.el6.i686.rpm</span><br></pre></td></tr></table></figure><blockquote><p>以上组件的安装是有自上而下的顺序要求，因为它们彼此有依赖关系。</p></blockquote><h3 id="服务控制-1"><a href="#服务控制-1" class="headerlink" title="服务控制"></a>服务控制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] service mysqld start[/stop/restart]</span><br></pre></td></tr></table></figure><h3 id="查看默认的root帐号密码"><a href="#查看默认的root帐号密码" class="headerlink" title="查看默认的root帐号密码"></a>查看默认的root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] grep &quot;root@localhost&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h3 id="修改root帐号密码"><a href="#修改root帐号密码" class="headerlink" title="修改root帐号密码"></a>修改root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h3 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h3><p>在配置文件最后添加以下内容：</p><ul><li>连接mysql时的字符集设置为utf8mb4<br>init-connect=’SET NAMES utf8mb4’</li><li>默认存储引擎为INNODB<br>default-storage-engine=INNODB</li><li>服务器端字符集设置为utf8mb4<br>character-set-server=utf8mb4<br>[mysql]</li><li>mysql本身字符集设置为utf8mb4<br>default-character-set = utf8mb4<br>[client]</li><li>客户端操作mysql时字符集设置为utf8mb4<br>default-character-set = utf8mb4</li></ul><blockquote><p>工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> env </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建-LAMP-环境</title>
      <link href="/2018/05/10/2018-05-10-%E6%90%AD%E5%BB%BA-LAMP-%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/05/10/2018-05-10-%E6%90%AD%E5%BB%BA-LAMP-%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>LAMP : linux + apache2 + mysql5 + php7</p><a id="more"></a><h2 id="删除旧的-apache"><a href="#删除旧的-apache" class="headerlink" title="删除旧的 apache"></a>删除旧的 apache</h2><blockquote><p>把操作系统默认安装的apache给卸载掉，避免与我们要安装的有冲突</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum list installed | grep httpd</span><br></pre></td></tr></table></figure><blockquote><p>卸载与httpd有关系的软件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum -y remove httpd</span><br><span class="line">[root@localhost ~] yum -y remove httpd-tools</span><br></pre></td></tr></table></figure><blockquote><p>再整个系统中找与httpd有关系的文件或目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] find / -name httpd</span><br></pre></td></tr></table></figure><blockquote><p>删除与httpd有关系的文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] rm -rf /etc/httpd</span><br><span class="line">[root@localhost ~] rm -rf /usr/lib/httpd</span><br></pre></td></tr></table></figure><h3 id="依赖文件"><a href="#依赖文件" class="headerlink" title="依赖文件"></a>依赖文件</h3><blockquote><p>我们后边要安装的php、apache、mysql等相关的软件，这些软件都是通过C语言或C++语言编写的，因此需要安装gcc和gcc-c++编译器。</p></blockquote><blockquote><p>zlib软件是后续其他软件的依赖软件，有其他软件有代码优化压缩的作用。</p></blockquote><h2 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h2><h3 id="依赖文件-解压-安装"><a href="#依赖文件-解压-安装" class="headerlink" title="依赖文件(解压, 安装)"></a>依赖文件(解压, 安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf apr-1.5.2.tar.gz </span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/apr</span><br><span class="line">[root@localhost ~] tar zxf apr-util-1.5.4.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr</span><br><span class="line">[root@localhost ~] tar zxf pcre-8.40.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/pcre</span><br></pre></td></tr></table></figure><h3 id="apache-install"><a href="#apache-install" class="headerlink" title="apache install"></a>apache install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf httpd-2.4.29.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/apache2 --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --with-pcre=/usr/local/pcre --with-z=/usr/local/zlib --enable-so --enable-rewrite</span><br><span class="line">[root@localhost ~] make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>–enable-so            让apache激活并可以识别使用so后缀的功能模块</li><li>–enable-rewrite    开启重写模块(可以修改地址栏信息，例如隐藏index.php入口文件)</li></ul><h3 id="控制服务"><a href="#控制服务" class="headerlink" title="控制服务"></a>控制服务</h3><p>在/usr/local/apache2/bin目录里边进行服务操控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] ./apachectl start     开启apache服务</span><br><span class="line">[root@localhost ~] ./apachectl stop     关闭apache服务</span><br><span class="line">[root@localhost ~] ./apachectl restart     重启apache服务</span><br></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>为了使得外部用户浏览器可以访问到apache服务效果，还需要把linux系统本身的防火墙给予关闭掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] setup</span><br></pre></td></tr></table></figure><h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><h3 id="安装-依赖"><a href="#安装-依赖" class="headerlink" title="安装 依赖"></a>安装 依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] yum -y install libxml2-devel</span><br><span class="line">xml库依赖支持</span><br><span class="line">[root@localhost ~] yum -y install openssl-devel</span><br><span class="line">openssl：支持安全传输协议https</span><br><span class="line">[root@localhost ~] yum -y install libcurl-devel</span><br><span class="line">curl是服务器彼此间调用的接口，常用于爬虫技术</span><br><span class="line">[root@localhost ~] yum -y install libjpeg-turbo-devel</span><br><span class="line">[root@localhost ~] yum -y install libpng-devel</span><br><span class="line">png图片格式支持</span><br><span class="line">[root@localhost ~] yum -y install freetype-devel</span><br><span class="line">画图字体库支持</span><br><span class="line">[root@localhost ~] yum -y install libxslt-devel</span><br><span class="line">打开XSLT 文件支持，扩展了libXML2库</span><br></pre></td></tr></table></figure><h3 id="php-install"><a href="#php-install" class="headerlink" title="php install"></a>php install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] tar zxf php-7.0.25.tar.gz</span><br><span class="line">[root@localhost ~] ./configure --prefix=/usr/local/php7.0 --with-apxs2=/usr/local/apache2/bin/apxs --with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir --with-kerberos --with-jpeg-dir --with-libxml-dir --with-mysqli --with-openssl --with-pcre-regex --with-pdo-mysql --with-pear --with-png-dir --with-xmlrpc --with-xsl --with-zlib --enable-bcmath --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --enable-zip</span><br></pre></td></tr></table></figure><h3 id="参数-详解"><a href="#参数-详解" class="headerlink" title="参数 详解"></a>参数 详解</h3><ul><li>–with-apxs2=/usr/local/apache2/bin/apxs –&gt; 上边的指令会在安装php的时候就自动生成php模块，名称为libphp7so，并且该模块会生成到apache的对应模块目录(/usr/local/apache2/modules/)里边，然后还会自动去修改httpd.conf文件，使得引入该libphp7.so的模块</li><li>–with-curl –&gt; 打开curl的支持，使得php可以访问其他网站的网址并获得对应的内容，是爬虫技术范畴，file_get_contents(“<a href="http://xxx”)" target="_blank" rel="noopener">http://xxx”)</a>;</li><li>–with-freetype-dir         –&gt;     字体库支持</li><li>–with-gd –&gt; 画图技术支持，我们并不需要主动安装gd库，该gd库已经被集成在php内部(如下图)了，随着php安装gd库也会被自动安装好</li><li>–with-gettext          –&gt;         支持开发多语言系统</li><li>–with-iconv-dir          –&gt;         iconv函数库能够完成各种字符集间的转换</li><li>–with-kerberos          –&gt;         kerberos支持</li><li>–with-jpeg-dir      –&gt;              jpeg图片格式支持</li><li>–with-libxml-dir      –&gt;             libxml2库的支持</li><li>–with-mysqli      –&gt;                 Mysqli数据库的支持</li><li>–with-openssl –&gt; openssl的支持，加密传输时用到的,类似这样的协议<a href="https://xx就需要openssl的技术支持" target="_blank" rel="noopener">https://xx就需要openssl的技术支持</a></li><li>–with-pcre-regex      –&gt;             正则表达式支持</li><li>–with-pdo-mysql          –&gt;         pdo-mysql支持</li><li>–with-pear          –&gt;  pear是PHP的扩展和应用程序库，包含了很多有用的类</li><li>–with-png-dir      –&gt;             png图片格式支持</li><li>–with-xmlrpc      –&gt;                 xml相关的扩展库支持</li><li>–with-xsl          –&gt;             打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件</li><li>–with-zlib          –&gt;             zlib压缩库支持</li><li>–enable-bcmath      –&gt;             图片大小调整技术支持</li><li>–enable-libxml      –&gt;             xml支持</li><li>–enable-inline-optimization –&gt;      优化线程，给php整体做性能优化处理</li><li>–enable-gd-native-ttf  –&gt;         画图字体库支持，支持TrueType字符串函数库</li><li>–enable-mbregex          –&gt;         正则表达式支持</li><li>–enable-mbstring      –&gt;             mb宽字节函数库支持</li><li>–enable-opcache          –&gt;         缓存支持</li><li>–enable-pcntl          –&gt;         pcntl扩展可以支持php的多线程操作</li><li>–enable-shmop      –&gt;             shmop是一个易于使用的功能集，允许PHP读，写，创建和删除UNIX共享内存段</li><li>–enable-sysvsem        –&gt;         作用同上</li><li>–enable-soap          –&gt;         SOAP 的全称为简单对象访问协议 (Simple Object Access Protocol)。它是一种基于 XML 的，可扩展的通信协议。SOAP 提供了一种标准，使得运行在不同平台上并使用不同的编程语言编写的应用程序可以互相进行通信</li><li>–enable-sockets          –&gt;         sockets 支持</li><li>–enable-xml          –&gt;             xml支持</li><li>–enable-zip         –&gt;             php支持对zip压缩包处理</li></ul><p>(上述有一些配置参数没有设置依赖软件的路径名，其会到系统默认位置找到对应的软件，如果依赖软件没有安装到系统默认位置，则需要通过完整路径名显示设置好。还有一些配置参数本身就是“是或否”的意思，则不需要设置依赖路径名)</p><h3 id="制作php-ini文件"><a href="#制作php-ini文件" class="headerlink" title="制作php.ini文件"></a>制作php.ini文件</h3><p>在php解压目录里边把php.ini-development 复制到/usr/local/php7.0/lib/php.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] cp php.ini-development /usr/local/php7.0/lib/php.ini</span><br></pre></td></tr></table></figure><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><h3 id="卸载旧的-MySQL-同apache"><a href="#卸载旧的-MySQL-同apache" class="headerlink" title="卸载旧的 MySQL, 同apache"></a>卸载旧的 MySQL, 同apache</h3><h3 id="下载mysql组件"><a href="#下载mysql组件" class="headerlink" title="下载mysql组件"></a>下载mysql组件</h3><ul><li>官网：<a href="https://www.mysql.com" target="_blank" rel="noopener">https://www.mysql.com</a></li><li>下载地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></li></ul><h3 id="MySQL-install"><a href="#MySQL-install" class="headerlink" title="MySQL install"></a>MySQL install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root ~] rpm -ivh mysql-community-common-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-libs-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-client-5.7.20-1.el6.i686.rpm</span><br><span class="line">[root ~] rpm -ivh mysql-community-server-5.7.20-1.el6.i686.rpm</span><br></pre></td></tr></table></figure><blockquote><p>以上组件的安装是有自上而下的顺序要求，因为它们彼此有依赖关系。</p></blockquote><h3 id="服务控制"><a href="#服务控制" class="headerlink" title="服务控制"></a>服务控制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] service mysqld start[/stop/restart]</span><br></pre></td></tr></table></figure><h3 id="查看默认的root帐号密码"><a href="#查看默认的root帐号密码" class="headerlink" title="查看默认的root帐号密码"></a>查看默认的root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] grep &quot;root@localhost&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h3 id="修改root帐号密码"><a href="#修改root帐号密码" class="headerlink" title="修改root帐号密码"></a>修改root帐号密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h3 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h3><p>在配置文件最后添加以下内容：</p><ul><li>连接mysql时的字符集设置为utf8mb4<br>init-connect=’SET NAMES utf8mb4’</li><li>默认存储引擎为INNODB<br>default-storage-engine=INNODB</li><li>服务器端字符集设置为utf8mb4<br>character-set-server=utf8mb4<br>[mysql]</li><li>mysql本身字符集设置为utf8mb4<br>default-character-set = utf8mb4<br>[client]</li><li>客户端操作mysql时字符集设置为utf8mb4<br>default-character-set = utf8mb4</li></ul><blockquote><p>工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> env </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> linux </tag>
            
            <tag> apache </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2017/03/16/hello-world/"/>
      <url>/2017/03/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
